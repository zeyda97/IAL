
package serverSoap;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Soap", targetNamespace = "http://client/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Soap {


    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteUser", targetNamespace = "http://client/", className = "serverSoap.DeleteUser")
    @ResponseWrapper(localName = "deleteUserResponse", targetNamespace = "http://client/", className = "serverSoap.DeleteUserResponse")
    @Action(input = "http://client/Soap/deleteUserRequest", output = "http://client/Soap/deleteUserResponse")
    public boolean deleteUser(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "modifyUser", targetNamespace = "http://client/", className = "serverSoap.ModifyUser")
    @ResponseWrapper(localName = "modifyUserResponse", targetNamespace = "http://client/", className = "serverSoap.ModifyUserResponse")
    @Action(input = "http://client/Soap/modifyUserRequest", output = "http://client/Soap/modifyUserResponse")
    public boolean modifyUser(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "authentification", targetNamespace = "http://client/", className = "serverSoap.Authentification")
    @ResponseWrapper(localName = "authentificationResponse", targetNamespace = "http://client/", className = "serverSoap.AuthentificationResponse")
    @Action(input = "http://client/Soap/authentificationRequest", output = "http://client/Soap/authentificationResponse")
    public boolean authentification(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addUser", targetNamespace = "http://client/", className = "serverSoap.AddUser")
    @ResponseWrapper(localName = "addUserResponse", targetNamespace = "http://client/", className = "serverSoap.AddUserResponse")
    @Action(input = "http://client/Soap/addUserRequest", output = "http://client/Soap/addUserResponse")
    public boolean addUser(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @return
     *     returns java.util.List<serverSoap.Utilisateur>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listUser", targetNamespace = "http://client/", className = "serverSoap.ListUser")
    @ResponseWrapper(localName = "listUserResponse", targetNamespace = "http://client/", className = "serverSoap.ListUserResponse")
    @Action(input = "http://client/Soap/listUserRequest", output = "http://client/Soap/listUserResponse")
    public List<Utilisateur> listUser();

}
